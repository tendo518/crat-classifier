[project]
name = "crat-classifier"
version = "0.1.0"
description = "Add your description here"
authors = [{ name = "Full Name", email = "email@address.invalid" }]
dependencies = [
    "torch>=2.1.0,<2.2",
    "torchvision>=0.16.1",
    "lightning>=2.2.5",
    "scikit-learn>=1.5.0",
    "scipy>=1.13.1",
    "tensorboard>=2.17.0",
    "tqdm>=4.66.4",
    "torchmetrics>=1.4.0.post0",
    "tyro>=0.8.4",
    "pandas<2.0",
    "numpy>=1.26.4,<2.0",
    "pydantic>=2.7.3",
    "seaborn>=0.13.2",
    "matplotlib>=3.9.0",
    "pyqt6>=6.7.0",
    "torch-geometric>=2.5.3",
    "torch-sparse @ https://data.pyg.org/whl/torch-2.1.0%2Bcu121/torch_sparse-0.6.18%2Bpt21cu121-cp311-cp311-linux_x86_64.whl",
    "torch-scatter @ https://data.pyg.org/whl/torch-2.1.0%2Bcu121/torch_scatter-2.1.2%2Bpt21cu121-cp311-cp311-linux_x86_64.whl",
]
readme = "README.md"
requires-python = ">= 3.10"
license = { text = "MIT" }

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = ["ruff>=0.4.8"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/crat_classifier"]


[tool.ruff]
# line-length = 80
lint.select = [
    "E",   # pycodestyle errors.
    "F",   # Pyflakes rules.
    "I",   # isort formatting.
    "PLC", # Pylint convention warnings.
    "PLE", # Pylint errors.
    "PLR", # Pylint refactor recommendations.
    "PLW", # Pylint warnings.
]

[tool.pyright]
include = ["src", "scripts"]
exclude = ["**/node_modules", "**/__pycache__", "data/", "output/"]
